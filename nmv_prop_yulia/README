This program is written by Toby Zeng in Department of Chemistry, University of Waterloo. It has only one F77 source code file, asymrho.f and you can run make to compile it, generating the asymrho.x executable file. Two lines that call the llapack DSYEV subroutine has been replaced by calling the self-contained tql subroutine to diagonalize the rigid-body rotational matrix. You can comment out the tql-calling and "comment in" the DSYEV-calling subrotines. But you will need to link the code to the lapack library in compilation. The code also requires quadruple precision for some arrays, i.e., those real*16 declarations. These declarations are recognized and handled properly by the ifort compiler. But if you use other compilers, e.g., gfortran, a dynamic library for quad precision arithmetics is needed. One will need to export the dynamic library path before running the executable.

This code is used to generate a table of PIMC rotational propagator and energy estimator on a grid of relative Euler angles for a rigid asymmetric top molecule. The original formulas are Eqs 15 and 16 of J. Chem. Phys. 134, 054117 (2011). The grid has been hard-coded to be degree-wise in phi, theta, and chi and our PIMC program employs linear interpolation to obtain propagator and energy estimators between grid points. The command to run the code is

		#           T    P   iodevn ith0 ithend Arot Brot Crot  maxj
		./asymrho.x 0.37 128 -1 10 10 0.6666525 0.2306476 0.1769383 66

Users will need to modify the library path according to the architectures of their computers. The arguments are simulation temperature in K (0.37), the number of rotational beads in simulation (128), initial and final thetas for the run (10 and 10, integers for theta in degrees), rotational constant of the rotor in CM-1 (0.6666525, 0.2306476, and 0.1769383), and a flag (0, 1, or -1) to indicate the type of rotor. 0 indicates a para-H2O type of rotor, 1 a ortho-H2O type, and -1 a rotor that does not have coupling between nuclear spin and rotation.

You may specify the initial and final theta angles to be 0 and 360 to prepare the tables of propagator and estimator in one thrust, but the looping over theta is usually slow. Toby always submit 361 jobs with only one theta in each of them (identical initial and final theta) to maximize the parallel. For each theta, three output files are generated from the run, rho.denxxx_rho, rho.denxxx_eng, and rho.denxxx_esq. "xxx" specified the theta, 000 for theta = 0 Deg and 090 for 90 Deg. Those files  have formats adapted for the PIMC run. Given 361 rho.denxxx_rho, 361 rho.denxxx_eng, and rho.denxxx_esq files, you may run the script, compile.x, to generate the files with the whole tables. The resultant files are rho.den_rho, rho.den_eng, and rho.den_esq. They are ready to be read by the PIMC code. Remember not to make any change inside the three files. Also, you will need to change the names of the three files for the PIMC code to open them successfully. For details of nomenclature, please refer to the PIMC manual.

Given any question, please feel free to contact Toby Zeng (tzeng@ualberta.ca).
